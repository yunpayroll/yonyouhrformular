/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package com.yunpayroll.formular;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int K_AS = 2;
  /** RegularExpression Id. */
  int K_IS = 3;
  /** RegularExpression Id. */
  int K_END = 4;
  /** RegularExpression Id. */
  int K_OR = 5;
  /** RegularExpression Id. */
  int K_AND = 6;
  /** RegularExpression Id. */
  int K_NOT = 7;
  /** RegularExpression Id. */
  int K_NULL = 8;
  /** RegularExpression Id. */
  int K_LIKE = 9;
  /** RegularExpression Id. */
  int K_TIME_KEY_EXPR = 10;
  /** RegularExpression Id. */
  int K_CASE = 11;
  /** RegularExpression Id. */
  int K_WHEN = 12;
  /** RegularExpression Id. */
  int K_THEN = 13;
  /** RegularExpression Id. */
  int K_ELSE = 14;
  /** RegularExpression Id. */
  int K_CAST = 15;
  /** RegularExpression Id. */
  int K_IF = 16;
  /** RegularExpression Id. */
  int K_DATETIMELITERAL = 17;
  /** RegularExpression Id. */
  int K_DOUBLE = 18;
  /** RegularExpression Id. */
  int K_ESCAPE = 19;
  /** RegularExpression Id. */
  int K_VALUEOFSUBTABLE = 20;
  /** RegularExpression Id. */
  int K_UPDATEFROMANOTHERPERIOD = 21;
  /** RegularExpression Id. */
  int ST_SEMICOLON = 22;
  /** RegularExpression Id. */
  int OP_GREATERTHANEQUALS = 23;
  /** RegularExpression Id. */
  int OP_MINORTHANEQUALS = 24;
  /** RegularExpression Id. */
  int OP_NOTEQUALSSTANDARD = 25;
  /** RegularExpression Id. */
  int OP_NOTEQUALSBANG = 26;
  /** RegularExpression Id. */
  int S_DOUBLE = 27;
  /** RegularExpression Id. */
  int S_LONG = 28;
  /** RegularExpression Id. */
  int DIGIT = 29;
  /** RegularExpression Id. */
  int S_HEX = 30;
  /** RegularExpression Id. */
  int HEX_VALUE = 31;
  /** RegularExpression Id. */
  int LINE_COMMENT = 32;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 33;
  /** RegularExpression Id. */
  int S_IDENTIFIER = 34;
  /** RegularExpression Id. */
  int LETTER = 35;
  /** RegularExpression Id. */
  int PART_LETTER = 36;
  /** RegularExpression Id. */
  int S_CHAR_LITERAL = 37;
  /** RegularExpression Id. */
  int S_QUOTED_IDENTIFIER = 38;
  /** RegularExpression Id. */
  int ESC = 39;
  /** RegularExpression Id. */
  int SQL_IDENTIFIER = 40;
  /** RegularExpression Id. */
  int PK_IDENTIFIER = 41;
  /** RegularExpression Id. */
  int PK_ID = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "\"AS\"",
    "\"IS\"",
    "\"END\"",
    "\"OR\"",
    "\"AND\"",
    "\"NOT\"",
    "\"NULL\"",
    "\"LIKE\"",
    "<K_TIME_KEY_EXPR>",
    "\"CASE\"",
    "\"WHEN\"",
    "\"THEN\"",
    "\"ELSE\"",
    "\"CAST\"",
    "\"IF\"",
    "<K_DATETIMELITERAL>",
    "\"DOUBLE\"",
    "\"ESCAPE\"",
    "\"VALUEOFSUBTABLE\"",
    "\"UPDATEFROMANOTHERPERIOD\"",
    "\";\"",
    "<OP_GREATERTHANEQUALS>",
    "<OP_MINORTHANEQUALS>",
    "<OP_NOTEQUALSSTANDARD>",
    "\"!=\"",
    "<S_DOUBLE>",
    "<S_LONG>",
    "<DIGIT>",
    "<S_HEX>",
    "<HEX_VALUE>",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<S_IDENTIFIER>",
    "<LETTER>",
    "<PART_LETTER>",
    "<S_CHAR_LITERAL>",
    "<S_QUOTED_IDENTIFIER>",
    "<ESC>",
    "<SQL_IDENTIFIER>",
    "<PK_IDENTIFIER>",
    "<PK_ID>",
    "\"(\"",
    "\"=\"",
    "\",\"",
    "\"@\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\">\"",
    "\"<\"",
    "\"||\"",
    "\"|\"",
    "\"&\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"{d\"",
    "\"}\"",
    "\"{t\"",
    "\"{ts\"",
    "\"::\"",
    "\".\"",
    "\"[\"",
    "\"]\"",
  };

}
